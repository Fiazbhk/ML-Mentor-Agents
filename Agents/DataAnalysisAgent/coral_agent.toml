[agent]
name = "DataAnalysisAgent"
version = "1.0.0"
description = "Intelligent dataset analysis agent for machine learning workflows"
author = "ML Mentor Team"
license = "MIT"
tags = ["machine-learning", "data-analysis", "preprocessing", "eda"]

[agent.metadata]
category = "data-processing"
subcategory = "analysis"
complexity = "intermediate"
execution_time = "fast"  # < 30 seconds for most datasets
resource_requirements = "low"  # < 1GB RAM, minimal CPU

[agent.capabilities]
input_formats = ["csv", "json", "xlsx", "xls", "parquet"]
output_format = "json"
max_dataset_size = "100MB"
supported_dtypes = ["numeric", "categorical", "datetime", "boolean"]

[agent.api]
endpoint = "/analyze"
method = "POST"
async = true

[agent.api.input_schema]
type = "object"
required = ["dataset"]
properties.dataset = { type = "object", description = "Dataset to analyze" }
properties.options = { type = "object", description = "Analysis options" }

[agent.api.output_schema]
type = "object"
properties.success = { type = "boolean" }
properties.analysis = { type = "object" }
properties.error = { type = "string" }

[agent.dependencies]
python_version = ">=3.8"
packages = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0"
]

[agent.docker]
base_image = "python:3.9-slim"
port = 8000
health_check = "/health"

[agent.examples]
[[agent.examples.usage]]
name = "Basic CSV Analysis"
description = "Analyze a CSV dataset for ML readiness"
input = """
{
  "file_path": "./data/iris.csv"
}
"""
output = """
{
  "success": true,
  "analysis": {
    "metadata": {
      "rows": 150,
      "columns": 5
    },
    "overall_quality_score": {
      "overall": 95.2
    },
    "summary": "Dataset contains 150 rows and 5 columns. Overall data quality score: 95.2/100..."
  }
}
"""

[[agent.examples.usage]]
name = "Dataset with Missing Values"
description = "Handle datasets with data quality issues"
input = """
{
  "file_content": "base64_encoded_csv_data",
  "file_type": "csv"
}
"""

[agent.coral_registry]
discoverable = true
public = true
featured = false

[agent.coral_registry.pricing]
model = "free"
credits_per_call = 0

[agent.coral_registry.sla]
uptime = "99.9%"
response_time = "< 5s"
concurrent_requests = 100

[agent.performance]
benchmarks = [
    { dataset_size = "1K rows", avg_time = "0.5s", memory = "50MB" },
    { dataset_size = "10K rows", avg_time = "2.1s", memory = "150MB" },
    { dataset_size = "100K rows", avg_time = "15.3s", memory = "800MB" }
]

[agent.integrations]
compatible_agents = [
    "ModelSelectionAgent",
    "TrainingAgent", 
    "EvaluationAgent",
    "PreprocessingAgent"
]

workflows = [
    "ml-mentor-pipeline",
    "automl-workflow",
    "data-quality-check"
]

[agent.monitoring]
metrics = [
    "requests_per_minute",
    "average_response_time", 
    "error_rate",
    "dataset_size_distribution"
]

logs = [
    "analysis_results",
    "performance_metrics",
    "error_details"
]